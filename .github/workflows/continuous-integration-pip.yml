name: CI (pip)
on:
  push:
    paths-ignore:
      - 'CHANGELOG.md'
  pull_request:
  schedule:
    - cron: '0 11 * * 4'

jobs:
  skip_duplicate:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}

  analyse:
    name: Analyse
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        # Override language selection
        with:
          languages: python
          setup-python-dependencies: false

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  test-pip:
    needs: skip_duplicate
    if: ${{ needs.skip_duplicate.outputs.should_skip == 'false' }}
    strategy:
      matrix:
        python-version: [ 3.9, "3.10" ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          pip install coverage
      - name: Lint with flake8
        run: |
          # stop the build if there are flake8 errors (E203,W505 not compatible to black)
          flake8 src tests --count --extend-ignore=E203,W503 --max-line-length=88 --show-source --statistics
      - name: Install from source (required for the pre-commit tests)
        run: pip install .
      - name: Test with pytest
        run: python ./tests/test_nographs.py
      - name: Upload coverage
        uses: codecov/codecov-action@v1

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Build package
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel
          pip install dist/*.tar.gz
          echo "Install went OK"

  publish:
    name: Publish to PyPI
    needs: build
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Build package
        run: |
          pip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish
        uses: pypa/gh-action-pypi-publish@v1.1.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_KEY }}
